{
  Name: "creditoNoValido",
  GlobalSourceCode: "\r\nprivate void SetupFuncMonitor()\r\n{\r\n  InitFunc();\r\n  \r\n  //Setup the project plan data\r\n  Func.ProjectInfo.CustomerId         = StepValStr(\"CreditoNoValidoTest>CustomerId\");\r\n  Func.ProjectInfo.CustomerName       = StepValStr(\"CreditoNoValidoTest>CustomerName\");\r\n  Func.ProjectInfo.ProjectId          = StepValStr(\"CreditoNoValidoTest>ProjectId\");\r\n  Func.ProjectInfo.ProjectName        = StepValStr(\"CreditoNoValidoTest>ProjectName\");\r\n  Func.ProjectInfo.IterationId        = StepValStr(\"CreditoNoValidoTest>IterationId\");\r\n  Func.ProjectInfo.TestCaseId         = StepValStr(\"CreditoNoValidoTest>TestCaseId\"); \r\n  Func.ProjectInfo.ApplicationVersion = StepValStr(\"CreditoNoValidoTest>ApplicationVersion\");\r\n  Func.ProjectInfo.TechnologyApp      = \"Web\"; //Change this with the proper value\r\n  \r\n  //Setup the project details\r\n  Func.ProjectInfo.GsqaService           = GsqaService.TIA; //TIA;ATM;Services\r\n  Func.ProjectInfo.HumanRelationRate     = StepValDouble(\"CreditoNoValidoTest>HumanRelationRate\"); \r\n  Func.ProjectInfo.DeploymentEnvironment = DevEnvironment.PRD; //DEV;QA;STG;PRD\r\n  Func.ProjectInfo.IsGreenHeartPrdMode   = StepValBool(\"CreditoNoValidoTest>IsGreenHeartPrdMode\");\r\n  \r\n  ResetStartTime();\r\n}\r\n\r\n\r\nprivate void SendZapiResults(string projectId, string issueId, string versionId, string cycleId, bool isTestFailed, string testMessage)\r\n{\r\n  //Prepare arguments\r\n  string result   = isTestFailed ? \"ERROR\" : \"OK\";\r\n  testMessage     = testMessage.Replace(\"\\\"\",\"\\\\\\\"\");\r\n  string testData = projectId + \" \" + issueId + \" \" + versionId + \" \" + cycleId + \" \\\"\" + result + \"\\\" \\\"\" + testMessage + \"\\\"\";\r\n\r\n  Console.WriteLine(testData);\r\n  \r\n  //create the zapi client console\r\n  var zapiCon       = new AiMap.Common.BlindConsole();\r\n  zapiCon.Arguments = @\"-jar \" + ThisModel.ModelDir + \"\\\\zapi_client.jar \" + testData;\r\n  \r\n  //execute the zapi console\r\n  zapiCon.ExecuteProcess(\"java\");\r\n  \r\n  //Wait for console to finish\r\n  string outConsole = String.Empty;\r\n  do\r\n  {\r\n     Sleep(300);\r\n     outConsole = zapiCon.ReadResult();\r\n  } while(!outConsole.Contains(\"BYE!\"));\r\n  \r\n  Console.WriteLine(outConsole);\r\n}",
  RobotAuthor: "author",
  SeleniumBrowser: "Chrome",
  Stages: [
    {
      Name: "POInicio",
      SourceCode: "\r\n//RunAt:Desktop\r\nbool IController.Execute()\r\n{\r\n  return true;\r\n}",
      Type: "Windows",
      Image: "iVBORw0KGgoAAAANSUhEUgAAAAQAAAAECAYAAACp8Z5+AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAAATSURBVBhXY3gro/IfGZMsoPIfAJwQIsGZ6BOUAAAAAElFTkSuQmCC",
      Steps: [
        {
          Name: "OpenPortal",
          Value: "https://www.bancopopular.com.co",
          ActionType: "SeNavigateToAndMaximize"
        },
        {
          Name: "GetCreditCardUrl",
          Value: "https://www.bancopopular.com.co/solicitud-tarjeta-de-credito-on-line/?utm_source=Autopauta&utm_medium=boton&utm_campaign=tc-tcpc-bp-nal-ap-dtc-ccn-homedestacado-tc&utm_content=tradicional",
          ActionType: "SeGetAttributeValue",
          SeByLocator: "Id",
          SeLocatorString: "newbp-home-btn-tc-expres",
          SeAttributeToExtract: "href"
        },
        {
          Name: "NavigateToCreditCard",
          Value: "[POInicio.GetCreditCardUrl]",
          ActionType: "SeNavigateToAndMaximize"
        },
        {
          Name: "Log",
          ActionType: "None",
          EvidenceTitle: "Iniciando Prueba",
          EvidenceOrder: "Before"
        }
      ]
    },
    {
      Name: "PODataInicial",
      SourceCode: "\r\n//RunAt:Desktop\r\nbool IController.Execute()\r\n{\r\n  return true;\r\n}",
      Type: "Windows",
      Image: "iVBORw0KGgoAAAANSUhEUgAAAAQAAAAECAYAAACp8Z5+AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAAATSURBVBhXY3gro/IfGZMsoPIfAJwQIsGZ6BOUAAAAAElFTkSuQmCC",
      Steps: [
        {
          Name: "escribirIdDocumento",
          Value: "100001",
          ActionType: "SeClear",
          SeByLocator: "Id",
          SeLocatorString: "document-id"
        },
        {
          Name: "escribirPrimerNombre",
          X: 10,
          Y: 10,
          Value: "PrimerNombre",
          ActionType: "SeClear",
          SeByLocator: "Id",
          SeLocatorString: "first-name"
        },
        {
          Name: "escribirPrimerApellido",
          X: 20,
          Y: 20,
          Value: "PrimerApellido",
          ActionType: "SeClear",
          SeByLocator: "Id",
          SeLocatorString: "first-surname"
        },
        {
          Name: "escribirNumeroTelefono",
          X: 30,
          Y: 30,
          Value: "3003457055",
          ActionType: "SeClear",
          SeByLocator: "Id",
          SeLocatorString: "cellphone-number"
        },
        {
          Name: "aprobarDatosPersonales",
          Value: "true",
          ActionType: "SeElementMarked",
          SeByLocator: "Css",
          SeLocatorString: "[for = 'approval-personal']"
        },
        {
          Name: "aprobarDatosRiesgos",
          X: 10,
          Y: 10,
          Value: "true",
          ActionType: "SeElementMarked",
          SeByLocator: "Css",
          SeLocatorString: "[for = 'approval-risk']"
        },
        {
          Name: "clicIniciar",
          ActionType: "SeClick",
          SeByLocator: "Id",
          SeLocatorString: "continue-btn",
          EvidenceTitle: "Iniciar solicitud",
          EvidenceOrder: "Before",
          EvidenceDescription: "[PODataInicial.escribirIdDocumento] - [PODataInicial.escribirPrimerNombre] [PODataInicial.escribirPrimerApellido]"
        }
      ]
    },
    {
      Name: "POResultadoSolicitud",
      SourceCode: "\r\n//RunAt:Desktop\r\nbool IController.Execute()\r\n{\r\n  return true;\r\n}",
      Type: "Windows",
      Image: "iVBORw0KGgoAAAANSUhEUgAAAAQAAAAECAYAAACp8Z5+AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAAATSURBVBhXY3gro/IfGZMsoPIfAJwQIsGZ6BOUAAAAAElFTkSuQmCC",
      Steps: [
        {
          Name: "ObtenerMensaje",
          Value: "Tu crédito no fue aprobado",
          ActionType: "SeExtractElementText",
          SeByLocator: "Css",
          SeLocatorString: "tpl-rejection-message h1",
          EvidenceTitle: "Resultado Solicitud",
          EvidenceOrder: "After",
          EvidenceDescription: "[POResultadoSolicitud.ObtenerMensaje]"
        }
      ]
    },
    {
      Name: "CreditoNoValidoTest",
      SourceCode: "//RunAt:Desktop\r\nbool IController.Execute()\r\n{\r\n   k.SetupFuncMonitor();\r\n  \r\n  //Run tests\r\n  k.RunTest(DetectaCreditoNoValidoTest, PrepararNavegador, PublishZephyrError);\r\n  \r\n  return true;\r\n}\r\n\r\nprivate void PrepararNavegador()\r\n{\r\n  k.Run(\"POInicio>OpenPortal\");\r\n}\r\n\r\n//[MetricsInfo(ExcellentTime = 16000,  ToleratingTime = 18000)]\r\nprivate void DetectaCreditoNoValidoTest()\r\n{\r\n  //Arrange\r\n  string expectedErrorMessage = \"Tu crédito no fue aprobado\";\r\n  \r\n  //Act\r\n  k.Run(\"POInicio\", true);\r\n  k.Run(\"PODataInicial\", true);\r\n  k.Run(\"POResultadoSolicitud\", true);\r\n  \r\n  //Assert\r\n  string actualError = k.StepVal(\"POResultadoSolicitud>ObtenerMensaje\");\r\n  actualError.Should().Contain(expectedErrorMessage);\r\n}\r\n\r\nprivate void PublishZephyrError()\r\n{\r\n  \r\n  k.SendZapiResults(projectId:\"10000\", issueId:\"10049\", versionId:\"10001\", cycleId: \"-1\"\r\n             , isTestFailed: k.TestRunFailed, testMessage: k.TestRunError);\r\n  \r\n  k.Run(\"CreditoNoValidoTest>killBrowser\");\r\n}",
      Type: "Windows",
      Image: "iVBORw0KGgoAAAANSUhEUgAAAAQAAAAECAYAAACp8Z5+AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAAATSURBVBhXY3gro/IfGZMsoPIfAJwQIsGZ6BOUAAAAAElFTkSuQmCC",
      Steps: [
        {
          Name: "CustomerId",
          Value: "999",
          ActionType: "None"
        },
        {
          Name: "CustomerName",
          Value: "BancoPopular",
          ActionType: "None"
        },
        {
          Name: "ProjectId",
          Value: "999",
          ActionType: "None"
        },
        {
          Name: "ProjectName",
          Value: "AtmExample",
          ActionType: "None"
        },
        {
          Name: "IterationId",
          Value: "01",
          ActionType: "None"
        },
        {
          Name: "TestCaseId",
          Value: "BP-20",
          ActionType: "None"
        },
        {
          Name: "ApplicationVersion",
          Value: "1.0.0",
          ActionType: "None"
        },
        {
          Name: "BotName",
          Value: "BOT_EXAMPLE",
          ActionType: "None"
        },
        {
          Name: "HumanRelationRate",
          Value: "2.5",
          ActionType: "None"
        },
        {
          Name: "IsGreenHeartPrdMode",
          Value: "false",
          ActionType: "None"
        },
        {
          Name: "killBrowser",
          ActionType: "SeKillDriver"
        }
      ]
    }
  ]
}